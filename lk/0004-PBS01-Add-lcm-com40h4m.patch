From 92d538ec9e15d83a92ef503a9471de11d3bc5450 Mon Sep 17 00:00:00 2001
From: "jiawei.li" <jiawei.li@sim.com>
Date: Tue, 22 Nov 2016 10:14:18 +0800
Subject: [PATCH 4/6] PBS01: Add lcm com40h4m

Change-Id: I02f20696c8908403da5d9543d8813a16ee9e485a
---
 dev/gcdb/display/include/panel_com40h4m_video.h | 232 ++++++++++++++++++++++++
 target/pbs01/oem_panel.c                        |  34 +++-
 target/pbs01/target_display.c                   |   4 +-
 3 files changed, 267 insertions(+), 3 deletions(-)
 create mode 100644 dev/gcdb/display/include/panel_com40h4m_video.h

diff --git a/dev/gcdb/display/include/panel_com40h4m_video.h b/dev/gcdb/display/include/panel_com40h4m_video.h
new file mode 100644
index 0000000..72d6ffb
--- /dev/null
+++ b/dev/gcdb/display/include/panel_com40h4m_video.h
@@ -0,0 +1,232 @@
+/* Copyright (c) 2013, The Linux Foundation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *  * Neither the name of The Linux Foundation nor the names of its
+ *    contributors may be used to endorse or promote products derived
+ *    from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+/*---------------------------------------------------------------------------
+ * This file is autogenerated file using gcdb parser. Please do not edit it.
+ * Update input XML file to add a new entry or update variable in this file
+ * VERSION = "1.0"
+ *---------------------------------------------------------------------------*/
+
+#ifndef _PANEL_COM40H4M_VIDEO_H_
+#define _PANEL_COM40H4M_VIDEO_H_
+/*---------------------------------------------------------------------------*/
+/* HEADER files                                                              */
+/*---------------------------------------------------------------------------*/
+#include "panel.h"
+
+/*---------------------------------------------------------------------------*/
+/* Panel configuration                                                       */
+/*---------------------------------------------------------------------------*/
+static struct panel_config com40h4m_video_panel_data = {
+	"qcom,mdss_dsi_com40h4m_video", "dsi:0:", "qcom,mdss-dsi-panel",
+	10, 0, "DISPLAY_1", 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL
+};
+
+/*---------------------------------------------------------------------------*/
+/* Panel resolution                                                          */
+/*---------------------------------------------------------------------------*/
+static struct panel_resolution com40h4m_video_panel_res = {
+	480, 800, 16, 16, 16, 0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0
+};
+
+/*---------------------------------------------------------------------------*/
+/* Panel color information                                                   */
+/*---------------------------------------------------------------------------*/
+static struct color_info com40h4m_video_color = {
+	24, 0, 0xff, 0, 0, 0
+};
+
+/*---------------------------------------------------------------------------*/
+/* Panel on/off command information                                          */
+/*---------------------------------------------------------------------------*/
+static char com40h4m_video_on_cmd0[] = {
+	0x11, 0x00, 0x05, 0x80
+};
+
+static char com40h4m_video_on_cmd1[] = {
+	0x04, 0x00, 0x39, 0xC0,
+	0xB9, 0xFF, 0x83, 0x63,
+};
+
+static char com40h4m_video_on_cmd2[] = {
+	0x0E, 0x00, 0x39, 0xC0,
+	0xBA, 0x80, 0x00, 0x10,
+	0x08, 0x08, 0x10, 0x7C,
+	0x6E, 0x6D, 0x0A, 0x01,
+	0x80, 0x43, 0xFF, 0xFF,
+};
+
+static char com40h4m_video_on_cmd3[] = {
+	0x36, 0x00, 0x15, 0x80
+};
+
+static char com40h4m_video_on_cmd4[] = {
+	0x3A, 0x70, 0x15, 0x80
+};
+/*static char com40h4m_video_on_cmd3[] = {
+	0x02, 0x00, 0x39, 0xC0,
+	0x36, 0x00, 0xFF, 0xFF,
+};
+
+static char com40h4m_video_on_cmd4[] = {
+	0x02, 0x00, 0x39, 0xC0,
+	0x3A, 0x70, 0xFF, 0xFF,
+};*/
+
+static char com40h4m_video_on_cmd5[] = {
+	0x0D, 0x00, 0x39, 0xC0,
+	0xB1, 0x78, 0x24, 0x04,
+	0x02, 0x02, 0x03, 0x10,
+	0x10, 0x34, 0x3C, 0x3F,
+	0x3F, 0xFF, 0xFF, 0xFF,
+};
+
+static char com40h4m_video_on_cmd6[] = {
+	0x0a, 0x00, 0x39, 0xC0,
+	0xB4, 0x00, 0x08, 0x6E,
+	0x07, 0x01, 0x01, 0x62,
+	0x01, 0x57, 0xFF, 0xFF,
+};
+
+static char com40h4m_video_on_cmd7[] = {
+	0xCC, 0x0B, 0x15, 0x80
+};
+/*static char com40h4m_video_on_cmd7[] = {
+	0x02, 0x00, 0x39, 0xC0,
+	0xCC, 0x0B, 0xFF, 0xFF,
+};*/
+
+static char com40h4m_video_on_cmd8[] = {
+	0x1f, 0x00, 0x39, 0xC0,
+	0xE0, 0x01, 0x48, 0x4D,
+	0x4E, 0x58, 0xF6, 0x0B,
+	0x4E, 0x12, 0xD5, 0x15,
+	0x95, 0x55, 0x8E, 0x11,
+	0x01, 0x48, 0x4D, 0x55,
+	0x5F, 0xFD, 0x0A, 0x4E,
+	0x51, 0xD3, 0x17, 0x95,
+	0x96, 0x4E, 0x11, 0xFF,
+};
+
+static char com40h4m_video_on_cmd9[] = {
+	0x29, 0x00, 0x05, 0x80
+};
+
+static struct mipi_dsi_cmd com40h4m_video_on_command[] = {
+	{0x4, com40h4m_video_on_cmd0, 0xc8},
+	{0x8, com40h4m_video_on_cmd1, 0x00},
+	{0x14, com40h4m_video_on_cmd2, 0x00},
+	{0x4, com40h4m_video_on_cmd3, 0x00},
+	{0x4, com40h4m_video_on_cmd4, 0x05},
+	{0x14, com40h4m_video_on_cmd5, 0x00},
+	{0x10, com40h4m_video_on_cmd6, 0x05},
+	{0x4, com40h4m_video_on_cmd7, 0x00},
+	{0x24, com40h4m_video_on_cmd8, 0x05},
+	{0x4, com40h4m_video_on_cmd9, 0x32}
+};
+
+#define COM40H4M_VIDEO_ON_COMMAND 10
+
+
+static char com40h4m_videooff_cmd0[] = {
+	0x28, 0x00, 0x05, 0x80
+};
+
+static char com40h4m_videooff_cmd1[] = {
+	0x10, 0x00, 0x05, 0x80
+};
+
+static struct mipi_dsi_cmd com40h4m_video_off_command[] = {
+	{0x4, com40h4m_videooff_cmd0, 0x05},
+	{0x4, com40h4m_videooff_cmd1, 0x78}
+};
+
+#define COM40H4M_VIDEO_OFF_COMMAND 2
+
+
+static struct command_state com40h4m_video_state = {
+	0, 0
+};
+
+/*---------------------------------------------------------------------------*/
+/* Command mode panel information                                            */
+/*---------------------------------------------------------------------------*/
+static struct commandpanel_info com40h4m_video_command_panel = {
+	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+};
+
+/*---------------------------------------------------------------------------*/
+/* Video mode panel information                                              */
+/*---------------------------------------------------------------------------*/
+static struct videopanel_info com40h4m_video_video_panel = {
+	1, 0, 0, 0, 1, 1, 0, 0, 0x9
+};
+
+/*---------------------------------------------------------------------------*/
+/* Lane configuration                                                        */
+/*---------------------------------------------------------------------------*/
+static struct lane_configuration com40h4m_video_lane_config = {
+	2, 0, 1, 1, 0, 0, 0
+};
+
+/*---------------------------------------------------------------------------*/
+/* Panel timing                                                              */
+/*---------------------------------------------------------------------------*/
+static const uint32_t com40h4m_video_timings[] = {
+	/*0x66, 0x12, 0x0c, 0x00, 0x34, 0x34, 0x0f, 0x16, 0x0e, 0x03, 0x04, 0x00*/
+	0x2e, 0x12, 0x0c, 0x00, 0x34, 0x38, 0x10, 0x16, 0x0e, 0x03, 0x04, 0x00
+};
+
+static struct panel_timing com40h4m_video_timing_info = {
+	0, 4, 0x04, 0x1b
+};
+
+/*---------------------------------------------------------------------------*/
+/* Panel reset sequence                                                      */
+/*---------------------------------------------------------------------------*/
+static struct panel_reset_sequence com40h4m_video_reset_seq = {
+	{1, 0, 1, }, {20, 2, 20, }, 2
+};
+
+static const uint32_t com40h4m_14nm_video_timings[] = {                                                                         
+	0x1d, 0x19, 0x03, 0x04, 0x01, 0x03, 0x04, 0xa0,
+	0x1d, 0x19, 0x03, 0x04, 0x01, 0x03, 0x04, 0xa0,
+	0x1d, 0x09, 0x03, 0x04, 0x01, 0x03, 0x04, 0xa0,
+};  
+static struct labibb_desc com40h4m_video_labibb = {                                                                             
+	0, 1, 5700000, 5700000, 5700000, 5700000, 3, 3, 1, 0
+}; 
+/*---------------------------------------------------------------------------*/
+/* Backlight setting                                                         */
+/*---------------------------------------------------------------------------*/
+static struct backlight com40h4m_video_backlight = {
+	1, 1, 4095, 100, 1, "PMIC_8941"
+};
+ #define COM40H4M_VIDEO_SIGNATURE 0xFFFF 
+#endif /*_PANEL_COM40H4M_VIDEO_H_*/
diff --git a/target/pbs01/oem_panel.c b/target/pbs01/oem_panel.c
index 935d0bf..40c98b3 100644
--- a/target/pbs01/oem_panel.c
+++ b/target/pbs01/oem_panel.c
@@ -50,6 +50,7 @@
 #include "include/panel_r69006_1080p_video.h"
 #include "include/panel_r69006_1080p_cmd.h"
 #include "include/panel_truly_wuxga_video.h"
+#include "include/panel_com40h4m_video.h"
 
 
 /*---------------------------------------------------------------------------*/
@@ -61,6 +62,7 @@ enum {
 	R69006_1080P_VIDEO_PANEL,
 	R69006_1080P_CMD_PANEL,
 	TRULY_WUXGA_VIDEO_PANEL,
+	COM40H4M_WVGA_VIDEO_PANEL,
 	UNKNOWN_PANEL
 };
 
@@ -73,6 +75,7 @@ static struct panel_list supp_panels[] = {
 	{"truly_1080p_cmd", TRULY_1080P_CMD_PANEL},
 	{"r69006_1080p_video", R69006_1080P_VIDEO_PANEL},
 	{"r69006_1080p_cmd", R69006_1080P_CMD_PANEL},
+	{"com40h4m_wvga_video", COM40H4M_WVGA_VIDEO_PANEL},
 	{"truly_wuxga_video", TRULY_WUXGA_VIDEO_PANEL},
 };
 
@@ -222,6 +225,34 @@ static int init_panel_data(struct panel_struct *panelstruct,
 		pinfo->mipi.tx_eot_append = true;
 		pinfo->mipi.rx_eot_ignore = true;
 		break;
+	case COM40H4M_WVGA_VIDEO_PANEL:
+		panelstruct->paneldata    = &com40h4m_video_panel_data;
+		panelstruct->panelres     = &com40h4m_video_panel_res;
+		panelstruct->paneldata->panel_with_enable_gpio = 1;
+		panelstruct->color        = &com40h4m_video_color;
+		panelstruct->videopanel   = &com40h4m_video_video_panel;
+		panelstruct->commandpanel = &com40h4m_video_command_panel;
+		panelstruct->state        = &com40h4m_video_state;
+		panelstruct->laneconfig   = &com40h4m_video_lane_config;
+		panelstruct->paneltiminginfo
+			= &com40h4m_video_timing_info;
+		panelstruct->panelresetseq
+			= &com40h4m_video_reset_seq;
+		panelstruct->backlightinfo = &com40h4m_video_backlight;
+		pinfo->labibb = &com40h4m_video_labibb;
+		pinfo->mipi.panel_on_cmds
+			= com40h4m_video_on_command;
+		pinfo->mipi.num_of_panel_on_cmds
+			= COM40H4M_VIDEO_ON_COMMAND;
+		pinfo->mipi.panel_off_cmds
+			= com40h4m_video_off_command;
+		pinfo->mipi.num_of_panel_off_cmds
+			= COM40H4M_VIDEO_OFF_COMMAND;
+		memcpy(phy_db->timing,
+			com40h4m_14nm_video_timings,
+			24 * sizeof(uint32_t));
+		pinfo->mipi.signature = COM40H4M_VIDEO_SIGNATURE;
+		break;
 	case TRULY_WUXGA_VIDEO_PANEL:
 		panelstruct->paneldata    = &truly_wuxga_video_panel_data;
 		panelstruct->paneldata->panel_with_enable_gpio = 1;
@@ -306,7 +337,8 @@ int oem_panel_select(const char *panel_name, struct panel_struct *panelstruct,
 		break;
 	case HW_PLATFORM_QRD:
 	case HW_PLATFORM_PBS01:
-		panel_id = R69006_1080P_CMD_PANEL;
+		//panel_id = R69006_1080P_CMD_PANEL;
+		panel_id = COM40H4M_WVGA_VIDEO_PANEL;
 		break;
 	default:
 		dprintf(CRITICAL, "Display not enabled for %d HW type\n",
diff --git a/target/pbs01/target_display.c b/target/pbs01/target_display.c
index bd3b88d..d1e2597 100644
--- a/target/pbs01/target_display.c
+++ b/target/pbs01/target_display.c
@@ -70,7 +70,7 @@ static struct gpio_pin bkl_gpio = {
 };
 
 static struct gpio_pin enable_gpio = {
-  "msmgpio", 12, 3, 1, 0, 1
+  "msmgpio", 25, 3, 1, 0, 1
 };
 
 
@@ -231,7 +231,7 @@ int target_panel_reset(uint8_t enable, struct panel_reset_sequence *resetseq,
 
 			gpio_set_dir(enable_gpio.pin_id, 2);
 		}
-
+		mdelay(10);
 		if (hw_id != HW_PLATFORM_PBS01) {
 			gpio_tlmm_config(bkl_gpio.pin_id, 0,
 				bkl_gpio.pin_direction, bkl_gpio.pin_pull,
-- 
1.9.1

